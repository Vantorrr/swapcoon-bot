const Database = require('./src/models/Database');

async function addStaff() {
    const db = new Database();
    
    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const args = process.argv.slice(2);
    
    if (args.length === 0) {
        console.log('üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –î–û–ë–ê–í–õ–ï–ù–ò–Æ –ü–ï–†–°–û–ù–ê–õ–ê');
        console.log('');
        console.log('üõ°Ô∏è –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞:');
        console.log('   node add_staff.js admin [TELEGRAM_ID] [–ò–ú–Ø] [USERNAME]');
        console.log('   –ü—Ä–∏–º–µ—Ä: node add_staff.js admin 123456789 "–ü–∞–≤–µ–ª" pavel_admin');
        console.log('');
        console.log('üë®‚Äçüíº –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:');
        console.log('   node add_staff.js operator [TELEGRAM_ID] [–ò–ú–Ø] [USERNAME]');
        console.log('   –ü—Ä–∏–º–µ—Ä: node add_staff.js operator 987654321 "–ê–Ω–Ω–∞" anna_operator');
        console.log('');
        console.log('üîç –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö:');
        console.log('   node add_staff.js list');
        console.log('');
        console.log('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
        console.log('   node add_staff.js remove [TELEGRAM_ID]');
        console.log('   –ü—Ä–∏–º–µ—Ä: node add_staff.js remove 123456789');
        console.log('');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–æ—Å—Ç–∞–≤
        try {
            const staff = await db.getStaffList();
            console.log('üë• –¢–ï–ö–£–©–ò–ô –°–û–°–¢–ê–í:');
            if (staff.length === 0) {
                console.log('   –ü—É—Å—Ç–æ');
            } else {
                staff.forEach(person => {
                    const icon = person.role === 'admin' ? 'üõ°Ô∏è' : 'üë®‚Äçüíº';
                    console.log(`   ${icon} ${person.first_name} (@${person.username || 'null'}) - ID: ${person.telegram_id} - ${person.role}`);
                });
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞:', error.message);
        }
        
        process.exit(0);
    }
    
    const command = args[0].toLowerCase();
    
    try {
        if (command === 'list') {
            const staff = await db.getStaffList();
            console.log('üë• –ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö –ü–ï–†–°–û–ù–ê–õ–ê:');
            console.log('');
            
            const admins = staff.filter(p => p.role === 'admin');
            const operators = staff.filter(p => p.role === 'operator');
            
            console.log('üõ°Ô∏è –ê–î–ú–ò–ù–´:');
            if (admins.length === 0) {
                console.log('   –ù–µ—Ç –∞–¥–º–∏–Ω–æ–≤');
            } else {
                admins.forEach(admin => {
                    console.log(`   - ${admin.first_name} (@${admin.username || 'null'}) - ID: ${admin.telegram_id}`);
                });
            }
            
            console.log('');
            console.log('üë®‚Äçüíº –û–ü–ï–†–ê–¢–û–†–´:');
            if (operators.length === 0) {
                console.log('   –ù–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤');
            } else {
                operators.forEach(op => {
                    console.log(`   - ${op.first_name} (@${op.username || 'null'}) - ID: ${op.telegram_id}`);
                });
            }
            
            const adminIds = await db.getAdminIds();
            console.log(`\nüì¢ –ê–¥–º–∏–Ω—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${adminIds.join(', ')}`);
            
        } else if (command === 'admin' || command === 'operator') {
            const telegramId = args[1];
            const firstName = args[2];
            const username = args[3];
            
            if (!telegramId || !firstName) {
                console.log(`‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${command}–∞`);
                console.log(`–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node add_staff.js ${command} [TELEGRAM_ID] [–ò–ú–Ø] [USERNAME]`);
                process.exit(1);
            }
            
            if (!/^\d+$/.test(telegramId)) {
                console.log('‚ùå TELEGRAM_ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã');
                process.exit(1);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ
            const existing = await db.getStaffById(parseInt(telegramId));
            if (existing) {
                console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${telegramId} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${existing.first_name} (${existing.role})`);
                process.exit(1);
            }
            
            const role = command;
            const result = await db.addStaff({
                telegramId: parseInt(telegramId),
                username: username || null,
                firstName: firstName,
                lastName: null,
                role: role,
                addedBy: 8141463258 // –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –∫–∞–∫ –¥–æ–±–∞–≤–∏–≤—à–∏–π
            });
            
            const roleIcon = role === 'admin' ? 'üõ°Ô∏è' : 'üë®‚Äçüíº';
            console.log(`‚úÖ ${roleIcon} ${role.toUpperCase()} –¥–æ–±–∞–≤–ª–µ–Ω!`);
            console.log(`   –ò–º—è: ${firstName}`);
            console.log(`   ID: ${telegramId}`);
            console.log(`   Username: @${username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
            
        } else if (command === 'remove') {
            const telegramId = args[1];
            
            if (!telegramId) {
                console.log('‚ùå –£–∫–∞–∂–∏—Ç–µ TELEGRAM_ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
                console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node add_staff.js remove [TELEGRAM_ID]');
                process.exit(1);
            }
            
            if (!/^\d+$/.test(telegramId)) {
                console.log('‚ùå TELEGRAM_ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã');
                process.exit(1);
            }
            
            const id = parseInt(telegramId);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏
            const existing = await db.getStaffById(id);
            if (!existing) {
                console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                process.exit(1);
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –≥–ª–∞–≤–Ω—ã–π –ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
            if (id === 8141463258) {
                console.log('‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞');
                process.exit(1);
            }
            
            await db.removeStaff(id);
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω: ${existing.first_name} (${existing.role})`);
            
        } else {
            console.log(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}`);
            console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: admin, operator, list, remove');
            process.exit(1);
        }
        
        process.exit(0);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
if (require.main === module) {
    addStaff();
}

module.exports = { addStaff }; 